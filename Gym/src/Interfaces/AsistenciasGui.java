/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interfaces;

import Modelos.Arancel;
import Modelos.Asistencia;
import Modelos.Socio;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.javalite.activejdbc.Base;
import org.javalite.activejdbc.LazyList;

/**
 *
 * @author Nico
 */
public class AsistenciasGui extends javax.swing.JDialog {

    private DefaultTableModel defaultTable;
    private Socio socio;
    private int idCliente;
     /**
     * Creates new form asistenciasGui
     */
    public AsistenciasGui(java.awt.Frame parent, boolean modal,int idCliente) {
        super(parent, modal);
        initComponents();
                defaultTable= (DefaultTableModel) asistencias.getModel();
                this.idCliente= idCliente;
                this.socio = Socio.findFirst("ID_DATOS_PERS = ?", idCliente);
                cargarAsistencias(socio, idCliente);
   
    }

    private void cargarAsistencias(Socio socio,int idCliente){
             LazyList<Asistencia> asistencias = Asistencia.where("ID_DATOS_PERS = ? and FECHA >= ?", idCliente, socio.getDate("FECHA_ULT_PAGO"));
        asistencias.orderBy("ID_ASISTENCIA");
        Iterator<Asistencia> it = asistencias.iterator();
        int i = 0;
        int j;
        while (it.hasNext() &&i<30) {
            Asistencia asis= it.next();
            Arancel ar= Arancel.findFirst("id = ?", asis.get("ID_ACTIV"));
            String nombreActiv= ar.getString("nombre");
            String nombreActivCombo="";
            if(asis.get("ID_ACTIV_COMBO")!=null){
                ar= Arancel.findFirst("id = ?", asis.get("ID_ACTIV_COMBO"));
                nombreActivCombo=ar.getString("nombre");
            }
            Object row[] = new Object[4];
            row[0]= asis.get("ID_ASISTENCIA");
            row[1]= dateToMySQLDate(asis.getDate("FECHA"), true);
            row[2]= nombreActiv;
            row[3]= nombreActivCombo;
            defaultTable.addRow(row);
        }
    }
    /*va true si se quiere usar para mostrarla por pantalla es decir 12/12/2014 y false si va 
     para la base de datos, es decir 2014/12/12*/
    public String dateToMySQLDate(Date fecha, boolean paraMostrar) {
        if (paraMostrar) {
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
            return sdf.format(fecha);
        } else {
            java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
            return sdf.format(fecha);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        asistencias = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        borrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        asistencias.setAutoCreateRowSorter(true);
        asistencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ASISTENCIA", "FECHA", "ACTIVIDAD", "ACTIVIDAD DEL COMBO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        asistencias.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(asistencias);

        jPanel1.setLayout(new java.awt.GridLayout());

        borrar.setText("BORRAR ASISTENCIA SELECCIONADA");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });
        jPanel1.add(borrar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        if(asistencias.getSelectedRow()>0){
            int resp=JOptionPane.showConfirmDialog(this,"Â¿Desea borrar la asistencia seleccionada?", null,JOptionPane.YES_NO_OPTION);
            if(resp== JOptionPane.YES_OPTION){
            Integer idBorrar= (Integer)asistencias.getValueAt(asistencias.getSelectedRow(),0);
            Base.openTransaction();
            Asistencia.delete("ID_ASISTENCIA = ?", idBorrar);
            Base.commitTransaction();
            defaultTable.setRowCount(0);
            cargarAsistencias(socio, idCliente);
            }
        }
    }//GEN-LAST:event_borrarActionPerformed

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable asistencias;
    private javax.swing.JButton borrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
